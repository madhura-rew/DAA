#include <stdio.h>

void merge(int arr[], int l, int m, int r, int pass) {
    int n1 = m - l + 1;
    int n2 = r - m;
    int L[n1], R[n2];

    for (int i = 0; i < n1; i++)
        L[i] = arr[l + i];
    for (int i = 0; i < n2; i++)
        R[i] = arr[m + 1 + i];

    int i = 0, j = 0, k = l;
    while (i < n1 && j < n2)
        arr[k++] = (L[i] <= R[j]) ? L[i++] : R[j++];
    while (i < n1)
        arr[k++] = L[i++];
    while (j < n2)
        arr[k++] = R[j++];

    // Exact pass format
    printf("Pass: ");
    for (int i = l; i <= r; i++)
        printf("%d ", arr[i]);
    printf("\n");
}

void mergeSort(int arr[], int l, int r, int *pass) {
    if (l < r) {
        int m = l + (r - l) / 2;
        mergeSort(arr, l, m, pass);
        mergeSort(arr, m + 1, r, pass);
        merge(arr, l, m, r, (*pass)++);
    }
}

int main() {
    int n;
    printf("no of elements: ");
    scanf("%d", &n);

    int arr[n];
    printf("elements: ");
    for (int i = 0; i < n; i++)
        scanf("%d", &arr[i]);

    printf("Given array:\n");
    for (int i = 0; i < n; i++)
        printf("%d ", arr[i]);
    printf("\n");

    int pass = 1;
    mergeSort(arr, 0, n - 1, &pass);

    printf("Sorted array:\n");
    for (int i = 0; i < n; i++)
        printf("%d ", arr[i]);
    printf("\n");

    return 0;
}
